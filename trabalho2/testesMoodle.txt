
Incorrect program output
--- Input ---
x = 1.3;
a1 = 2/((x+1)*(x-1));
b1 = max( a1 * a1, x );
print a1;
print x;
print b1;

--- Program output ---
=== Código ===
x 1.3 = ^ a1 2 x @ 1 + x @ 1 - * / = ^ b1 max @ = ^
=== Console ===
=== Vars ===
|a1 ==> Num: 2.89855|
|b1 ==> Num: 0|
|max ==> Num: 0|
|x ==> Num: 1.3|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
x 1.3 = ^ a1 2 x @ 1 + x @ 1 - * / = ^ b1 a1 @ a1 @ * x @ max # = ^ a1 @ print # x @ print # b1 @ print #
=== Console ===
Num: 2.89855
Num: 1.3
Num: 8.4016
=== Vars ===
|a1 ==> Num: 2.89855|
|b1 ==> Num: 8.4016|
|x ==> Num: 1.3|
=== Pilha ===

Test 8: Fatorial
Incorrect program output
--- Input ---
a = -8!;
b = (2 * 2 + 1)!/3!;
print b! / -a ^ 2;

--- Program output ---
=== Código ===
a 0 8 - = ^
=== Console ===
=== Vars ===
|a ==> Num: -8|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
a 0 8 fat # - = ^ b 2 2 * 1 + fat # 3 fat # / = ^ b @ fat # 0 a @ 2 power # - / print #
=== Console ===
Num: -1.49652e+09
=== Vars ===
|a ==> Num: -40320|
|b ==> Num: 20|
=== Pilha ===

Test 9: Exponenciação
Incorrect program output
--- Input ---
a = 2 ^ 9 ^ 0.5;
b = 3.1 * a ^ a ^ (1/3!) + 1;
print -b ^ 2!;

--- Program output ---
=== Código ===
a 2 = ^
=== Console ===
=== Vars ===
|a ==> Num: 2|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
a 2 9 0.5 power # power # = ^ b 3.1 a @ a @ 1 3 fat # / power # power # * 1 + = ^ 0 b @ 2 fat # power # - print #
=== Console ===
Num: -3562.25
=== Vars ===
|a ==> Num: 8|
|b ==> Num: 59.6846|
=== Pilha ===

Test 10: Operador unário encadeado
Incorrect program output
--- Input ---
a = --( - 4 - 2 + 10 );
print +-+---a!;

--- Program output ---
=== Código ===
a 0 0 0 4 - 2 - 10 + - - = ^ 0 0 0 0 0 0 a @ - - - + - + print #
=== Console ===
Num: 4
=== Vars ===
|a ==> Num: 4|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
a 0 0 0 4 - 2 - 10 + - - = ^ 0 0 0 0 a @ fat # - - - - print #
=== Console ===
Num: 24
=== Vars ===
|a ==> Num: 4|
=== Pilha ===

Test 11: função dtos
Incorrect program output
--- Input ---
x = "maior: ";
a = - 2.1;
b = 3.1;
print x + dtos( max( a, b ) );

--- Program output ---
=== Código ===
x "maior: " = ^ a 0 2.1 - = ^ b 3.1 = ^ x @ dtos @ + print #
=== Console ===
=== Erro: Esperado um operando numérico, encontrado "maior: " ===
=== Vars ===
|a ==> Num: -2.1|
|b ==> Num: 3.1|
|dtos ==> Num: 0|
|x ==> Str: maior: |
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
x "maior: " = ^ a 0 2.1 - = ^ b 3.1 = ^ x @ a @ b @ max # dtos # + print #
=== Console ===
Str: maior: 3.100000
=== Vars ===
|a ==> Num: -2.1|
|b ==> Num: 3.1|
|x ==> Str: maior: |
=== Pilha ===

Test 13: erro ao usar função não definida
Incorrect program output
--- Input ---
x = 1;
y = 2;
a = mdc( x, y );

--- Program output ---
=== Código ===
x 1 = ^ y 2 = ^ a mdc @ = ^
=== Console ===
=== Vars ===
|a ==> Num: 0|
|mdc ==> Num: 0|
|x ==> Num: 1|
|y ==> Num: 2|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
x 1 = ^ y 2 = ^ a x @ y @ mdc # = ^
=== Console ===
=== Erro: Funcao não definida: mdc ===
=== Vars ===
|x ==> Num: 1|
|y ==> Num: 2|
=== Pilha ===
|Str: a|
|Num: 1|
|Num: 2|

Test 14: Fatorial inexistente
Incorrect program output
--- Input ---
b = (-8)!;

--- Program output ---
=== Código ===
b 0 8 - = ^
=== Console ===
=== Vars ===
|b ==> Num: -8|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
b 0 8 - fat # = ^
=== Console ===
=== Erro: Fatorial somente está definido para n >= 0 ===
=== Vars ===
=== Pilha ===
|Str: b|

Test 15: Exponencial inexistente
Incorrect program output
--- Input ---
a = 0;
print a^(-0!);

--- Program output ---
=== Código ===
a 0 = ^ a @ print #
=== Console ===
Num: 0
=== Vars ===
|a ==> Num: 0|
=== Pilha ===

--- Expected output (exact text)---
=== Código ===
a 0 = ^ a @ 0 0 fat # - power # print #
=== Console ===
=== Erro: A potência de zero é indefinida para um expoente negativo ===
=== Vars ===
|a ==> Num: 0|
=== Pilha ===
