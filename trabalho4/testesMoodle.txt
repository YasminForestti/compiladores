Failed tests
Test 2: #2 Blocos e variáveis
Test 3: #3 Variável duplicada
Test 4: #4 Escopo
Test 5: #5 Escopo
Test 15: #15 Função com parâmetros default
Test 16: #16 Função com parâmetros default complicados
Test 2: #2 Blocos e variáveis
Incorrect program output
--- Input ---
const a = 9;
function log( msg ) {
  msg asm{println # undefined};
}

var c = [
];
(log)( c );
{ let a = 3.1; }
{ const a = 8;
  let b = 7;
  c = b; }
var c = c+ c++;

--- Program output ---
Erro: a variável 'a' já foi declarada na linha 1.
=== Console ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===

--- Expected output (exact text)---
=== Console ===
[ ]
=== Vars ===
|{ a: 9; c: 14; log: { &funcao: ##; }; undefined: undefined; }|
=== Pilha ===

Test 3: #3 Variável duplicada
Incorrect program output
--- Input ---
let b, c;
{ const a = 0;
  var c;
}
let a = 8;
if( a ) {[];}
else {
  let b, d = { };
}
let d;
let a;

--- Program output ---
Erro: a variável 'c' já foi declarada na linha 1.
=== Console ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===

--- Expected output (exact text)---
Erro: a variável 'a' já foi declarada na linha 5.
=== Console ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===

Test 4: #4 Escopo
Incorrect program output
--- Input ---
function print(x) { x asm{println # undefined};
}
var a, b = [];
const c = -1;
print( c + c );
(b)[0] = true;
if( b[0] ) {
  let b = { };
  (b).m = 9;
  print( b );
  a = b.m;
}

--- Program output ---
Erro: a variável 'b' já foi declarada na linha 3.
=== Console ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===

--- Expected output (exact text)---
=== Console ===
-2
{ m: 9; }
=== Vars ===
|{ a: 9; b: [ 0: true; ]; c: -1; print: { &funcao: ##; }; undefined: undefined; }|
=== Pilha ===

Test 5: #5 Escopo
Incorrect program output
--- Input ---
var a, b = [];
const c = -1;
b[0] = true;
function print(x) { x asm{println # undefined};
  0 asm{undefined .};
  return 0;
}
if( b[0] ) { let a = -1; {
   let b = { };
    b.m = 9;
    print( b );
  }
  a = b;
}

--- Program output ---
Erro: a variável 'a' já foi declarada na linha 1.
=== Console ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===

--- Expected output (exact text)---
=== Console ===
{ m: 9; }
=== Vars ===
|{ a: undefined; b: [ 0: true; ]; c: -1; print: { &funcao: ##; }; undefined: undefined; }|
|{ a: -1; }|
|{ b: { m: 9; }; }|
|{ &retorno: ##; arguments: [ 0: { m: 9; }; ]; x: { m: 9; }; }|
=== Pilha ===
|0|
|undefined|

Test 15: #15 Função com parâmetros default
Incorrect program output
--- Input ---

function f( x = 9, y = 8.1 ) {
  log( 'Parametros: ' ); log( x ); log( ' ' ); log( y, true );
  return x + y;
}

function log( msg = 'Default!', pular_linha = false ) {
  if( pular_linha )
    msg asm{println # undefined};
  else
    msg asm{print # undefined};
}

log();
log( '-', true );
log( f(), true );
log( 'F = ' + f(), true );
let x = f(),
    a = f( 1 ),
    b = f( false, 8 ),
    c = f( 1, 2 );


--- Program output ---
=== Console ===
=== Erro: Instrução inválida: : ===
=== Instrução: 4 ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===
|syntax|
|error|
|Proximo|
|a|

--- Expected output (exact text)---
=== Console ===
Default!-
Parametros: 9 8.1
17.1
Parametros: 9 8.1
Default!
Parametros: 9 8.1
Parametros: 1 8.1
Parametros: false 8
Parametros: 1 2
=== Vars ===
|{ a: 9.1; b: undefined; c: 3; f: { &funcao: ##; }; log: { &funcao: ##; }; undefined: undefined; x: 17.1; }|
=== Pilha ===

Test 16: #16 Função com parâmetros default complicados
Incorrect program output
--- Input ---
function log( msg = 'Default!', pular_linha = f() ) {
  if( pular_linha )
    msg asm{println # undefined};
  else
    msg asm{print # undefined};
}

function f( a = f( 1 ) ) {
  log( 'Parametro a: ', false ); log( ' ', false ); log( a, true );
  if( a == true )
    return false;
  else
    return a == 1;
}

log( f() );
log( ' ', true );
log( f( 2 ), true );
let a = f();

--- Program output ---
=== Console ===
=== Erro: Instrução inválida: : ===
=== Instrução: 4 ===
=== Vars ===
|{ undefined: undefined; }|
=== Pilha ===
|syntax|
|error|
|Proximo|
|a|

--- Expected output (exact text)---
=== Console ===
Parametro a:  1
Parametro a:  true
Parametro a:  1
Parametro a:  true
false
Parametro a:  2
false
Parametro a:  1
Parametro a:  true
=== Vars ===
|{ a: false; f: { &funcao: ##; }; log: { &funcao: ##; }; undefined: undefined; }|
=== Pilha ===

Summary of tests
+------------------------------+
| 17 tests run/11 tests passed |
+------------------------------+
